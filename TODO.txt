REMEMBER: GET IT UP AND RUNNING ASAP (details and optimizations can come later)

Too much indirection and deep hierarchy for my needs
    get rid of PuzzleSelector and just have the PuzzleSet own the PuzzleIcons - look at Squares.cpp for comment on how I want the API to look

PuzzleSelector (and the PuzzleIcons it contains) - why do I even need this????
    Just have the Puzzle Sets own a list of PuzzleIcons
        then after calling LeftTap(input, mousex, mousey) on PuzzleSet
        call LeftTap(input, mousex, mousey) on each of the PuzzleIcons in that set (if any)

    This is a problem I'll have with puzzles and fractals
        what is the simpliest way to propagate user inputs through to the Icons (and Fractals later)?
        Having a puzzleselector is an extra abstraction layer - maybe should keep this just so
            I can use this as an example on how to deal with Puzzles/Fractal relationship later (which will be at least an order of magnitude more complex)
            this causes a lot of indirection - I'll need handles going in and out to process all inputs

Allow window scaling when the application is active
    should check online for reference material on how to change SDL2 window sizes (event)

Everything is squished when the aspect ratio is not a 480x270 ratio
    how do I fix this?  I want everything to look that same (eg same height/width ratio) regardless of window ratio
    Two things:
        1. Currently, the projection matrix in renderer is hard coded to 480x270 - need to change this to accomodate aspect ratio of window
        2. Currently, Squares.cpp uses 480x270 world space (related to projection) need to change this to accomodate aspect ratio of window
        3. Need to accomodate window scaling too

    Tests: (all squares should be squares, and rectangles should be 2:1)
        1. Check fullscreen
        2. Check windowed with 480x270 aspect ratio
        3. Check windowed with aspect ratio of 2:1
        4. Check windowed with aspect ratio of 1:2

Set build (x86 or x64) (or should this be a build option???)

Build on linux virtual machine to test different compiler (GCC)
