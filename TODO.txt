REMEMBER: GET IT UP AND RUNNING ASAP (details and optimizations can come later)

Collisions not working correctly because window mouse coordinates and entity coordinates are on different scales
the scale of the projection is changing when we change g_Scale
    so putting entities at 32, 32 will be different (that's why we scale the entity positions)
    BUT!!!! Window mouse locations are completely different since in fullscreen, it's always the same
    will need to SCALE DOWN the mouse coordinates if we want collisions working,

    Both world and screen space fill the same physical space on my laptop screen, but the coordinate systems are NOT
        the same

    example: using a g_Scale of 1.0 will make the projection only 270 x 480, (which I'll call world or Entity space)
    but mouse coordinates will still be on a 1920 x 1080 scale (for fullscreen on my laptop, which I'll call screenspace)
        so the collisions don't work correctly

    example: using a g_Scale of 4.0 will make projection 1080 x 1920 (world/entity space)
        which matches the window / mouse coordiantes space, so collisions work

    i'm translating mouse coordinates based on window size too (and flipping the y axis)

    It might be easier to work ONLY in 270 x 480 coordinate system and scale accordingly
        this is because it's best to stick tho the 32x32 standard sizes for buttons etc


Create Puzzleset entities and have them animate in when player clicks on start button

Have a way to set size of entity (eg, 64 x 32), so that sprite can vary in size
    bounding boxes are buggy (smaller than they should be)
    seems to be an issue with screen resolution and window size (related to below)
    Everything breaks when switching off fullscreen
        think about how I want to do this and togglefull screen often to check (maybe should make a key for this??? so I can change it during runtime)

Abstract things away as needed based on how the last step went to prepare for the next step

Make puzzlesets, puzzles and fractals (the most complex class) - abstract or refactor as needed

Set build (x86 or x64) (or should this be a build option???)

Build on linux virtual machine to test different compiler (GCC)
