REMEMBER: GET IT UP AND RUNNING ASAP (details and optimizations can come later)

    Idea: create a class that teaches the basics of blockchains using my typescript example to business owners
            have people who understand it better than me critique it and fix any problems I have,
                and then point in their direction for business connections (and collect a commission for it???)

            Give the source out to people who want it - but essentially run it inside a class for two hours + 1 break

    PITCH: An application teaching goemetric transformations using puzzles, but the app itself is a puzzle the user must explore to unravel
    GOAL: A vertical slice of the entire game - one complete cube (with other cubes grayed out so you can use them)
            48 puzzles - 8 sets.  First 3 must be done in order.  Last 5 can be done in any order
                1. 1x1 fractals, up to two colors, 3 transformations
                2. 2x2 fractals, up to two colors, 3 transformations
                3. 4x4 fractals, up to two colors, 3 transformations
                4. 4x4 fractals, up to three colors, 5 transformations 
                5. 4x4 fractals, up to three colors, 5 transformations 
                6. 4x4 fractals, up to three colors, 5 transformations 
                7. 4x4 fractals, up to four colors, 7 transformations
                8. 4x4 fractals, up to four colors, 7 transformations

                4x4 is maximum playable grid (endpoints can be extra blocks on the longer screen dimension)

            look at notebook for design notes
                the puzzle interaction needs to be clarified and fleshed out ( main problem is I don't like solving puzzles in 3 dimensions)
                    solving in 3 dimensions requires too much input to see all possibilities, whereas for 2-d puzzles all the information
                    can be present on screen at one time.  In real life this is less of a problem since rotating a rubrik's cube with 
                    your hands is significantly easier than doing the same on a digital screen (due to the simple fact that we use our hands
                    on a daily basis and only use my application / mouse and keyboard for limited time a day)

                    The third dimension is more useful for exploration / building atmosphere than to solve complex puzzles (at least with the current 
                        limitations in user input - touchscreen, mouse, keyboard)  That will change once VR tech becomes more commonplace and advanced

                    -solving fractal puzzles is mostly clear (connecting colored line segments across surface of a square)
                    -solving cube faces puzzle is a bit fuzzy (connecting colored line segments wrapped around 6 surfaces of a cube, but requires 3-d motion????)
                    -solving 8 cubes puzzles for tesseract is very fuzzy (I don't know how I want to do this)


    THE BIG THREE:
        1. Learn NodeJS with Typescript - groundwork for stable work if this app doesn't pan out- do this for Xuan and our future
            look at TODO.text in TypescriptTest project for notes on what to do 

            Get a good web project that I can put in portfolio by the end of the month of December (nifty website for LASEPS or something would be good)
                Find some good websites to use as a starting point (consulting, marketing websites)
                keep it simple and clean - angular has all the stuff I need (probably) or even just make it in html, css and TypeScript with Node.js and Express.js
            Polish up the rigid body simulation - for potential c++ gamedev/systems/embedded jobs
            Polish up the custom software 3d rasterizer - same as above

            practice: set up linux server - how to do it??? Practice it by setting it up with different configurations (eg, for node.js, flask, docker, etc)

        2.  Install linux server to play with nodejs and typescript - linux server will be good enough
            Get my code from GossipProtocol over to the ubuntu-server (can i do this through ssh???)
            How to I send data to/from each gossip node???? 
            Need a nice way to disconnect from protocol.  
            How does a new gossipNode find a node to connect to???


        3. Core Puzzle Features - transformations/splitting/forming and puzzle clear/puzzleset clear (do this in the morning)

            found a bug/problem with calling split twice
                code assumes target size is twice size of fractals (when splitting)
                BUT this is not true when we have a 4x4 that needs to be split into 1x1s - the target size is set to 2x2 when it should be 4x4

                How about SplitFractals has an overload with a list of FractalData that it has to satisfy???

            ////////////////////////////////////////////////////////////////////////////////////

            Implement non-moveable colored blocks (which are the endpoints user has to connect using transformations)

            Implement completing puzzles by connecting colored blocks with non-moveable colored blocks

            Create the layer menu system - 8 cubes - each cube unfolds into 6 puzzles - each puzzle consists of variable number of fractals to transform
                first screen starts with a puzzle (user can manipulate fractals)
                clearing that puzzle makes a 'go back' button appear for user to move to puzzle select screen
                once player clears all 6 puzzles (and then transforms the puzzles correctly), a 'go back' button appears that goes to the cube selection screen
                anytime during tutorial, player can press 'escape' to open a submenu for options/quitting
                what happens when the player clears the 8 cubes???  All 8 cubes transform into Dahl cross, and warp so the player sees the 4 dimenional tesseract
                roll credits


Set build (x86 or x64) (or should this be a build option???)

Open and build in visual studio using solutions generated by cmake to test if it works

Build on linux virtual machine to test different compiler (GCC) and the LLVM one (Clang)

Need to make sure MAX_VERTEX size in shaders are below hardware max 

Make sure I'm compile to release mode (and not debug) with optimizations turned to max
