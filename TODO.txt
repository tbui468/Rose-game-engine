Set build (x86 or x64) (or should this be a build option???)

SDL2 tutorial properly finding resource paths
SDL2 tutorial easy cleanup
Github Actions cmake CI???

EntityList<>
    make it work with buttons first, them templatize it for all different entities
    need to be able to iterate over list (to allow using for-each to iterate over entities)

CommandDispatcher 
    should a take in references to all EntityLists????
    then is could dispatch commands to all entities
    should also control parameter t for animation

Should try to abstract from SDL to make it easier to use this framework later
    in othe words, have no SDL function calls in Squares.cpp - first step is abstracting window and renderer out (see next item)

    Look at LazyFoo website tutorial for setting up OpenGL with Glew (set up as SDL extension library??)
        abstract all opengl/SDL functionality to Renderer class

Each entity/object on screen IS a quad (inherits from Quad)
    Make Quad class the contain general functions for all entities
        Draw() (but should save a reference to all entities in a list and make a draw call all in a drawing controller)
        DrawTransformed() "
        SetSprite


Rig up event system so button.OnClick() works using an input queue
    //how to abstract InputQueue away from SDL????
    //input queue only needs to worry about inputs I want to use for the application


Asset sprites Loading
Access OpenGL from SDL
Input Queue
Command Dispatcher

SDL LIBRARY
    -need to figure out how to use SDL (either as dynamic (shared) or static library)
    -currently, I just copied dll into same directory as executable
    -static will be faster, but I'll need to download SDL source, and build
    -dynamic, I'm not sure



