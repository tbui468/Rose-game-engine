REMEMBER: GET IT UP AND RUNNING ASAP (details and optimizations can come later)

    THE BIG THREE:
        1. Audio - FMOD (spend the mornings one this)
            Get music (at least 1) and sound effects (at least 2) integrated into application
            once it all works, abstract the necessary bits(shouldn't be much abstraction beyond init()/shutdown() since the current FMOD system is quite simple)
                init and shutdown can actually be left here in Application.cpp.  Just need to make the loading/playing/freeing sound 
                    API available in Layers

        2. Save/load system - SDL_GetPrefPath
            Save/Load system for puzzles and progress
            Undo system (which requires save/load system in place)

        3. Core Features - transformations/splitting/forming and puzzle clear/puzzleset clear

            Puzzle constructor doesn't really need a position parametere - just put it inside the puzzle class as a static variable to clean things up

            The processing of inputs can be left to the client side stuff in Squares

            InputQueue to allow user to queue up commands while the previous animation is still finishing

            PuzzleClear/PuzzleSetClear status and checks on transformations

    Add visual touches, like blurred fractals in front/behind play field that move along with puzzles to give illusion of depth and provide more animations


Set build (x86 or x64) (or should this be a build option???)

Build on linux virtual machine to test different compiler (GCC)

Need to make sure MAX_VERTEX size in shaders are below hardware max 


