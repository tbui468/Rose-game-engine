REMEMBER: GET IT UP AND RUNNING ASAP (details and optimizations can come later)

    PITCH: An application teaching goemetric transformations using puzzles, but the app itself is a puzzle the user must explore to unravel

    THE BIG THREE:
        1. Save/load system - SDL_GetPrefPath (Spend mornings on this)

                Need to initialize data structures to hold all application data at the beginning (loading either default or profile data)
                    std::array of PuzzleSets
                        puzzlesets should take in ALL puzzle data in with the constructor (just to keep things simple)                   
                            rewrite puzzleset constructor to take in puzzle data (look at current puzzle instantiation inside puzzleset constructor
                            to help guide how I want to do this)
                
                Data I need to save/load:
                    default.sav - loads on first starting application or if profile.sav is invalid (will also display message informing user profile is invalid)
                                    default.sav can be be in the same directory as the executable, since it's read only
                        puzzleset 0 - int
                            puzzle 0 - int
                                fractal data - list of int
                                width - int
                                height - int
                            puzzle 1
                        puzzleset 1
                            puzzle 0
                            puzzle 1
                    profile.sav - loads if exists and format is not invalid
                                profile.sav should be writting to user data directory for this app (SDL_GetPrefPath)


        2. Audio - FMOD
            Sound is playing on translate up 
            Get music looping

        3. Core Puzzle Features - transformations/splitting/forming and puzzle clear/puzzleset clear

            Get Red/Gree/Blue Entry and Exit fractals functional
                placed on edge of puzzles.  
                Can't be transformed or split/formed
                Same color, but different visually from regular fractals
                keep in mind that these entry/exit fractals will be used to check Puzzle::IsCleared(), and PuzzleSet()::IsCleared()

            PuzzleClear/PuzzleSetClear status and checks on transformations (Don't hide these checks deep inside the puzzlesets or puzzle classses)
                since it comes right after a transformation, should perform the check in the same place in MenuLayer (right before setting animation start parameters)
                    and set a flag somewhere (in MenuLayer would be best) if the puzzle is cleared
                then after the transformation animation is done, go straight to the cleared puzzle animation (do something similar for clearing puzzlesets)

            Moves per puzzle limit

            Shaders and special effects as rewards for clearing puzzles

            Add visual touches
                like blurred fractals in front/behind play field that move along with puzzles to give illusion of depth and provide more animations
                blurry dust motes (or something similar) floating in the background - maybe have selecting puzzles motion affect these motes

            Selecting a puzzleset should have it unwrap and form the individual puzzles - this would require roughly 9 puzzles per set

        4. Stop with the unnecessary abstractions
                EntryPoint.cpp - creates single instance of application class (no need for singletons or anything)
                Application.h and cpp - contains Layer/Renderer/Audio/Input classes
                    Layer - all gameplay scripting
                    Input - get user inputs/events
                    Renderer - all OpenGL code
                    Audio - all FMOD code

Set build (x86 or x64) (or should this be a build option???)

Build on linux virtual machine to test different compiler (GCC)

Need to make sure MAX_VERTEX size in shaders are below hardware max 


