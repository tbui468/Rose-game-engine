REMEMBER: GET IT UP AND RUNNING ASAP (details and optimizations can come later)

    THE BIG THREE:
        1. Audio - FMOD (spend the mornings one this)
            Get music (at least 1) and sound effects (at least 2) integrated into application
            once it all works, abstract the necessary bits(shouldn't be much abstraction beyond init()/shutdown() since the current FMOD system is quite simple)
                init and shutdown can actually be left here in Application.cpp.  Just need to make the loading/playing/freeing sound 
                    API available in Layers

            How to get audio system inside layer?  Could pass a pointer 

            Have Application object initialize audio system
                then allow user to create sounds from asset paths

            Make Audio class

        2. Save/load system - SDL_GetPrefPath
            Save/Load system for puzzles and progress
            Undo system (which requires save/load system in place)

        3. Core Features - transformations/splitting/forming and puzzle clear/puzzleset clear

            Move PuzzleIcon code in PuzzleSet constructor to PuzzleIcon class

            PuzzleClear/PuzzleSetClear status and checks on transformations (Don't hide these checks deep inside the puzzlesets or puzzle classses)
                since it comes right after a transformation, should perform the check in the same place in MenuLayer (right before setting animation start parameters)
                    and set a flag somewhere (in MenuLayer would be best) if the puzzle is cleared
                then after the transformation animation is done, go straight to the cleared puzzle animation (do something similar for clearing puzzlesets)

            Moves per puzzle limit

            Shaders and special effects as rewards for clearing puzzles

            Add visual touches
                like blurred fractals in front/behind play field that move along with puzzles to give illusion of depth and provide more animations
                blurry dust motes (or something similar) floating in the background - maybe have selecting puzzles motion affect these motes


Set build (x86 or x64) (or should this be a build option???)

Build on linux virtual machine to test different compiler (GCC)

Need to make sure MAX_VERTEX size in shaders are below hardware max 


